{"ast":null,"code":"var _jsxFileName = \"/home/cmkrosp/workspace/twiiterclone/src/routes/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n\n  const onChange = event => {\n    //구조 분해 할당\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      if (newAccount) {\n        const data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        const data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: newAccount ? \"Create Account\" : \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Continue with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Continue with Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 2\n  }, this);\n};\n\n_s(Auth, \"nxuqtk3cwkPg5V1tzwvbrhPO+zE=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/cmkrosp/workspace/twiiterclone/src/routes/Auth.js"],"names":["React","useState","authService","Auth","email","setEmail","password","setPassword","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","preventDefault","data","createUserWithEmailAndPassword","signInWithEmailAndPassword","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;;;AAEA,MAAMC,IAAI,GAAG,MAAK;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,UAAD,EAAYC,aAAZ,IAA6BR,QAAQ,CAAC,IAAD,CAA3C;;AACA,QAAMS,QAAQ,GAAIC,KAAD,IAAW;AAC3B;AACA,UAAM;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP;AAAT,QAA0BH,KAAhC;;AACA,QAAGE,IAAI,KAAK,OAAZ,EAAoB;AACnBR,MAAAA,QAAQ,CAACS,KAAD,CAAR;AACA,KAFD,MAEO,IAAGD,IAAI,KAAK,UAAZ,EAAuB;AAC7BN,MAAAA,WAAW,CAACO,KAAD,CAAX;AACA;AACD,GARD;;AASA,QAAMC,QAAQ,GAAI,MAAMJ,KAAN,IAAgB;AACjCA,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAI;AACJ,UAAGR,UAAH,EAAe;AACd,cAAMS,IAAI,GAAG,MAAMf,WAAW,CAACgB,8BAAZ,CACnBd,KADmB,EACZE,QADY,CAAnB;AAGA,OAJD,MAIO;AACN,cAAMW,IAAI,GAAG,MAAMf,WAAW,CAACiB,0BAAZ,CACnBf,KADmB,EACZE,QADY,CAAnB;AAGA;AACA,KAVD,CAUE,OAAOc,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACD,GAfD;;AAiBA,sBACA;AAAA,4BACA;AAAM,MAAA,QAAQ,EAAEL,QAAhB;AAAA,8BACC;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,MAAzB;AAAgC,QAAA,WAAW,EAAC,OAA5C;AAAoD,QAAA,QAAQ,MAA5D;AAA6D,QAAA,KAAK,EAAEX,KAApE;AAA2E,QAAA,QAAQ,EAAEM;AAArF;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,WAAW,EAAC,UAAnD;AAA8D,QAAA,QAAQ,MAAtE;AAAuE,QAAA,KAAK,EAAEJ,QAA9E;AAAwF,QAAA,QAAQ,EAAEI;AAAlG;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAEF,UAAU,GAAG,gBAAH,GAAsB;AAA5D;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAMA;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YANA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAaA,CA3CD;;GAAML,I;;KAAAA,I;AA6CN,eAAeA,IAAf","sourcesContent":["import React,{ useState } from \"react\";\nimport { authService } from \"fbase\"\n\nconst Auth = () =>{\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [newAccount,setNewAccount] = useState(true);\n\tconst onChange = (event) => {\n\t\t//구조 분해 할당\n\t\tconst {target: {name, value}} = event;\n\t\tif(name === \"email\"){\n\t\t\tsetEmail(value);\n\t\t} else if(name === \"password\"){\n\t\t\tsetPassword(value);\n\t\t}\n\t};\n\tconst onSubmit =  async(event) => {\n\t\tevent.preventDefault();\n\t\ttry {\n\t\tif(newAccount) {\n\t\t\tconst data = await authService.createUserWithEmailAndPassword(\n\t\t\temail, password\n\t\t\t)\n\t\t} else {\n\t\t\tconst data = await authService.signInWithEmailAndPassword(\n\t\t\temail, password\n\t\t\t)\n\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\treturn (\n <div>\n\t<form onSubmit={onSubmit}> \n\t\t<input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} />\n\t\t<input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\n\t\t<input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\" } />\n\t</form>\n\t<div>\n\t\t<button>Continue with Google</button>\n\t\t<button>Continue with Github</button>\n\t</div>\n</div>\n\t);\n}\n\t\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}